{"version":3,"sources":["App.module.css","Gallery.module.css","components/Checkbox/index.js","Gallery.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Checkbox","label","value","onChange","rest","className","stylesheet","root","type","Gallery","useState","items","setItems","filterBy","setFilterBy","error","setError","DESIGNERS","push","map","item","favorited","designer","name","CREATORS","Set","FILTERED_ITEMS","length","filter","includes","useEffect","axios","get","then","response","data","favorites","catch","wrapper","creator","prevValues","v","columnsCountBreakPoints","gutter","href","permalink","target","rel","link","card","src","first_photo","medium2_url","alt","App","app","intro","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.946726b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"intro\":\"App_intro__32qgl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Gallery_wrapper__1wNZC\",\"card\":\"Gallery_card__dsvkt\",\"link\":\"Gallery_link__2TcH3\",\"designer\":\"Gallery_designer__3HPrk\",\"filter\":\"Gallery_filter__xZd49\"};","import stylesheet from './Checkbox.module.css';\n\nconst Checkbox = ({label, value, onChange, ...rest}) => {\n  return (\n    <label className={stylesheet.root} {...rest}>\n        <input type=\"checkbox\" value={value} onChange={onChange}/> \n        {label}\n    </label>\n  );\n}\n\nexport default Checkbox;\n","import { useEffect, useState } from 'react';\nimport axios from \"axios\";\n\nimport stylesheet from './Gallery.module.css';\nimport Checkbox from './components/Checkbox';\n\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry';\n\nconst Gallery = () => {\n  const [ items, setItems ] = useState([]); \n  const [ filterBy, setFilterBy ] = useState([]);\n  const [ error, setError ] = useState(null);\n  let DESIGNERS = []\n  \n  // Set filter for creators\n  items ? DESIGNERS.push(items.map(item => item.favorited.designer.name)) : DESIGNERS = []\n\n  const CREATORS = [...new Set(DESIGNERS[0])];\n\n  const updateFilter = (item) => {\n    if(filterBy.includes(item)) {\n      setFilterBy((prevValues) => prevValues.filter((v) => v !== item));\n    } else {\n      setFilterBy((prevValues) => [...prevValues, item]);\n    }\n  }\n  const FILTERED_ITEMS = filterBy.length === 0 ? items : items.filter(item => filterBy.includes(item.favorited.designer.name));\n\n  // Fetch data\n  useEffect(() => {\n    axios.get(\"/data\").then((response, error) => {\n      setItems(response.data.favorites)\n    }).catch(error => {\n      setError(error);\n    });\n  }, []);\n\n  // If data cannot be retrieved, return error message\n  if (error) { return error } \n\n  // Return patterns\n  return items && (\n    <div className={stylesheet.wrapper}>\n      <fieldset className={stylesheet.filter}>\n        <legend>Creators</legend>\n          {CREATORS.map(creator => {\n            return <Checkbox key={creator} label={creator} value={filterBy.includes(creator)} onChange={() => updateFilter(creator)}/>\n            })}\n      </fieldset>\n      <h2 className=\"visuallyHidden\">Gallery of Knit Patterns</h2>\n      <ResponsiveMasonry\n        columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3 }}\n      >\n        <Masonry gutter=\"24px\">\n          {FILTERED_ITEMS.map(item => {\n            return item.type === 'pattern' && (\n              <a key={item.favorited.name} \n                href={`https://www.ravelry.com/patterns/library/${item.favorited.permalink}`}\n                target=\"_blank\" \n                rel=\"noreferrer\"\n                className={stylesheet.link}>\n                <div className={stylesheet.card}>\n                  <img src={item.favorited.first_photo.medium2_url} alt=\"\"/>\n                  <div>\n                    <p>{item.favorited.name}</p>\n                    <p className={stylesheet.designer}>\n                      <span className=\"visuallyHidden\">Designer: </span>\n                      {item.favorited.designer.name}\n                    </p>\n                  </div>\n                </div>\n              </a>\n            )\n          })}\n        </Masonry>\n      </ResponsiveMasonry>\n    </div>\n  )\n}\n\nexport default Gallery;\n","import React from 'react';\nimport stylesheet from './App.module.css';\nimport Gallery from './Gallery';\n\nconst App = () => {\n  return (\n    <>\n      <header>\n        <h1>Elegant Knits</h1>\n      </header>\n      <div className={stylesheet.app}>\n      <main>\n        <div>\n          <p className={stylesheet.intro}>Collection of minimal and timeless knit patterns for women. This was a personal project of mine using the <a href=\"https://www.ravelry.com/groups/ravelry-apihttps://www.ravelry.com/groups/ravelry-api\" target=\"_blank\" rel=\"noreferrer\">Ravelry API</a> to help group similar styled modern knits.</p>\n        </div>\n        <Gallery/>\n      </main>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}