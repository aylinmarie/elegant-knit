{"ast":null,"code":"import PropTypes from \"prop-types\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nvar DEFAULT_COLUMNS_COUNT = 1;\n\nvar useHasMounted = function useHasMounted() {\n  var _useState = useState(false),\n      hasMounted = _useState[0],\n      setHasMounted = _useState[1];\n\n  useEffect(function () {\n    setHasMounted(true);\n  }, []);\n  return hasMounted;\n};\n\nvar useWindowWidth = function useWindowWidth() {\n  var hasMounted = useHasMounted();\n\n  var _useState2 = useState(0),\n      width = _useState2[0],\n      setWidth = _useState2[1];\n\n  var handleResize = useCallback(function () {\n    if (!hasMounted) return;\n    setWidth(window.innerWidth);\n  }, [hasMounted]);\n  useEffect(function () {\n    if (hasMounted) {\n      window.addEventListener(\"resize\", handleResize);\n      handleResize();\n      return function () {\n        return window.removeEventListener(\"resize\", handleResize);\n      };\n    }\n  }, [hasMounted, handleResize]);\n  return width;\n};\n\nvar MasonryResponsive = function MasonryResponsive(_ref) {\n  var columnsCountBreakPoints = _ref.columnsCountBreakPoints,\n      children = _ref.children,\n      className = _ref.className,\n      style = _ref.style;\n  var windowWidth = useWindowWidth();\n  var columnsCount = useMemo(function () {\n    var breakPoints = Object.keys(columnsCountBreakPoints).sort(function (a, b) {\n      return a - b;\n    });\n    var count = breakPoints.length > 0 ? columnsCountBreakPoints[breakPoints[0]] : DEFAULT_COLUMNS_COUNT;\n    breakPoints.forEach(function (breakPoint) {\n      if (breakPoint < windowWidth) {\n        count = columnsCountBreakPoints[breakPoint];\n      }\n    });\n    return count;\n  }, [windowWidth, columnsCountBreakPoints]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, React.Children.map(children, function (child, index) {\n    return React.cloneElement(child, {\n      key: index,\n      columnsCount: columnsCount\n    });\n  }));\n};\n\nMasonryResponsive.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  columnsCountBreakPoints: PropTypes.object,\n  className: PropTypes.string,\n  style: PropTypes.object\n} : {};\nMasonryResponsive.defaultProps = {\n  columnsCountBreakPoints: {\n    350: 1,\n    750: 2,\n    900: 3\n  },\n  className: null,\n  style: null\n};\nexport default MasonryResponsive;","map":{"version":3,"sources":["/Users/aylinmcginnis/Sites/chic-knits/node_modules/react-responsive-masonry/es/ResponsiveMasonry/index.js"],"names":["PropTypes","React","useCallback","useEffect","useMemo","useState","DEFAULT_COLUMNS_COUNT","useHasMounted","_useState","hasMounted","setHasMounted","useWindowWidth","_useState2","width","setWidth","handleResize","window","innerWidth","addEventListener","removeEventListener","MasonryResponsive","_ref","columnsCountBreakPoints","children","className","style","windowWidth","columnsCount","breakPoints","Object","keys","sort","a","b","count","length","forEach","breakPoint","createElement","Children","map","child","index","cloneElement","key","propTypes","process","env","NODE_ENV","oneOfType","arrayOf","node","isRequired","object","string","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nvar DEFAULT_COLUMNS_COUNT = 1;\n\nvar useHasMounted = function useHasMounted() {\n  var _useState = useState(false),\n      hasMounted = _useState[0],\n      setHasMounted = _useState[1];\n\n  useEffect(function () {\n    setHasMounted(true);\n  }, []);\n  return hasMounted;\n};\n\nvar useWindowWidth = function useWindowWidth() {\n  var hasMounted = useHasMounted();\n\n  var _useState2 = useState(0),\n      width = _useState2[0],\n      setWidth = _useState2[1];\n\n  var handleResize = useCallback(function () {\n    if (!hasMounted) return;\n    setWidth(window.innerWidth);\n  }, [hasMounted]);\n  useEffect(function () {\n    if (hasMounted) {\n      window.addEventListener(\"resize\", handleResize);\n      handleResize();\n      return function () {\n        return window.removeEventListener(\"resize\", handleResize);\n      };\n    }\n  }, [hasMounted, handleResize]);\n  return width;\n};\n\nvar MasonryResponsive = function MasonryResponsive(_ref) {\n  var columnsCountBreakPoints = _ref.columnsCountBreakPoints,\n      children = _ref.children,\n      className = _ref.className,\n      style = _ref.style;\n  var windowWidth = useWindowWidth();\n  var columnsCount = useMemo(function () {\n    var breakPoints = Object.keys(columnsCountBreakPoints).sort(function (a, b) {\n      return a - b;\n    });\n    var count = breakPoints.length > 0 ? columnsCountBreakPoints[breakPoints[0]] : DEFAULT_COLUMNS_COUNT;\n    breakPoints.forEach(function (breakPoint) {\n      if (breakPoint < windowWidth) {\n        count = columnsCountBreakPoints[breakPoint];\n      }\n    });\n    return count;\n  }, [windowWidth, columnsCountBreakPoints]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, React.Children.map(children, function (child, index) {\n    return React.cloneElement(child, {\n      key: index,\n      columnsCount: columnsCount\n    });\n  }));\n};\n\nMasonryResponsive.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  columnsCountBreakPoints: PropTypes.object,\n  className: PropTypes.string,\n  style: PropTypes.object\n} : {};\nMasonryResponsive.defaultProps = {\n  columnsCountBreakPoints: {\n    350: 1,\n    750: 2,\n    900: 3\n  },\n  className: null,\n  style: null\n};\nexport default MasonryResponsive;"]},"metadata":{},"sourceType":"module"}